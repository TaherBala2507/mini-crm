{
  "info": {
    "name": "Mini-CRM/PMS Complete API",
    "description": "Complete API collection for Mini-CRM/PMS RBAC system with all endpoints\n\n## Features\n- Authentication & Authorization\n- User Management\n- Lead Management\n- Project Management\n- Task Management\n- Notes & Attachments\n- Role Management\n- Organization Settings\n- Analytics & Reporting\n\n## Setup\n1. Import this collection into Postman\n2. Update the `baseUrl` variable if needed (default: http://localhost:5000/api)\n3. Start with 'Auth > Register Organization' or 'Auth > Login'\n4. Access token will be automatically saved for subsequent requests\n\n## Test Coverage\n- ✅ 50/50 service tests passing\n- ✅ 98.33% statement coverage\n- ✅ 100% function coverage",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
    "_exporter_id": "mini-crm-api"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:5000/api",
      "type": "string"
    },
    {
      "key": "accessToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "refreshToken",
      "value": "",
      "type": "string"
    },
    {
      "key": "orgId",
      "value": "",
      "type": "string"
    },
    {
      "key": "userId",
      "value": "",
      "type": "string"
    },
    {
      "key": "leadId",
      "value": "",
      "type": "string"
    },
    {
      "key": "projectId",
      "value": "",
      "type": "string"
    },
    {
      "key": "taskId",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "Auth",
      "description": "Authentication and authorization endpoints",
      "item": [
        {
          "name": "Register Organization",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.data.tokens.refreshToken);",
                  "    pm.collectionVariables.set('orgId', response.data.user.orgId);",
                  "    pm.collectionVariables.set('userId', response.data.user.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"organizationName\": \"Acme Corp\",\n  \"organizationDomain\": \"acme\",\n  \"name\": \"John Doe\",\n  \"email\": \"admin@acme.com\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            },
            "description": "Register a new organization and create the first SuperAdmin user"
          },
          "response": []
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.data.tokens.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.data.tokens.refreshToken);",
                  "    pm.collectionVariables.set('orgId', response.data.user.orgId);",
                  "    pm.collectionVariables.set('userId', response.data.user.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@acme.com\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            },
            "description": "Login with email and password"
          },
          "response": []
        },
        {
          "name": "Get Current User",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/auth/me",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "me"]
            },
            "description": "Get current authenticated user details"
          },
          "response": []
        },
        {
          "name": "Refresh Token",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('accessToken', response.data.accessToken);",
                  "    pm.collectionVariables.set('refreshToken', response.data.refreshToken);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/refresh",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "refresh"]
            },
            "description": "Refresh access token using refresh token"
          },
          "response": []
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"refreshToken\": \"{{refreshToken}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "logout"]
            },
            "description": "Logout and revoke refresh token"
          },
          "response": []
        },
        {
          "name": "Forgot Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"admin@acme.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/password/forgot",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "password", "forgot"]
            },
            "description": "Request password reset email"
          },
          "response": []
        },
        {
          "name": "Reset Password",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"reset-token-from-email\",\n  \"password\": \"NewSecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/password/reset",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "password", "reset"]
            },
            "description": "Reset password with token from email"
          },
          "response": []
        },
        {
          "name": "Verify Email",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"token\": \"verification-token-from-email\",\n  \"password\": \"SecurePass123!\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/verify-email",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "verify-email"]
            },
            "description": "Verify email and set password for invited users"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Users",
      "description": "User management endpoints",
      "item": [
        {
          "name": "Invite User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Smith\",\n  \"email\": \"jane@acme.com\",\n  \"roleNames\": [\"Manager\"]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/invite",
              "host": ["{{baseUrl}}"],
              "path": ["users", "invite"]
            },
            "description": "Invite a new user to the organization (requires USER_INVITE permission)"
          },
          "response": []
        },
        {
          "name": "List Users",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users?page=1&pageSize=10&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["users"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                },
                {
                  "key": "status",
                  "value": "ACTIVE",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true
                }
              ]
            },
            "description": "List users with filters and pagination (requires USER_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{userId}}"
                }
              ]
            },
            "description": "Get user details by ID (requires USER_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Update User",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Jane Smith Updated\",\n  \"status\": \"ACTIVE\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{userId}}"
                }
              ]
            },
            "description": "Update user profile, roles, or status (requires USER_UPDATE permission)"
          },
          "response": []
        },
        {
          "name": "Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/users/:id",
              "host": ["{{baseUrl}}"],
              "path": ["users", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{userId}}"
                }
              ]
            },
            "description": "Delete user (soft delete - sets status to INACTIVE) (requires USER_DELETE permission)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Leads",
      "description": "Lead management endpoints",
      "item": [
        {
          "name": "Create Lead",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('leadId', response.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"John Customer\",\n  \"email\": \"john@customer.com\",\n  \"phone\": \"+1234567890\",\n  \"company\": \"Customer Corp\",\n  \"source\": \"WEBSITE\",\n  \"status\": \"NEW\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/leads",
              "host": ["{{baseUrl}}"],
              "path": ["leads"]
            },
            "description": "Create a new lead (requires LEAD_CREATE permission)"
          },
          "response": []
        },
        {
          "name": "List Leads",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/leads?page=1&pageSize=10&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["leads"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                },
                {
                  "key": "status",
                  "value": "NEW",
                  "disabled": true
                },
                {
                  "key": "source",
                  "value": "WEBSITE",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true
                }
              ]
            },
            "description": "List leads with filters and pagination (requires LEAD_VIEW_ALL or LEAD_VIEW_OWN permission)"
          },
          "response": []
        },
        {
          "name": "Get Lead by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/leads/:id",
              "host": ["{{baseUrl}}"],
              "path": ["leads", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{leadId}}"
                }
              ]
            },
            "description": "Get lead by ID (requires LEAD_VIEW_ALL or LEAD_VIEW_OWN permission)"
          },
          "response": []
        },
        {
          "name": "Update Lead",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"QUALIFIED\",\n  \"notes\": \"Follow up scheduled\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/leads/:id",
              "host": ["{{baseUrl}}"],
              "path": ["leads", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{leadId}}"
                }
              ]
            },
            "description": "Update lead (requires LEAD_EDIT_ALL or LEAD_EDIT_OWN permission)"
          },
          "response": []
        },
        {
          "name": "Delete Lead",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/leads/:id",
              "host": ["{{baseUrl}}"],
              "path": ["leads", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{leadId}}"
                }
              ]
            },
            "description": "Delete lead (soft delete) (requires LEAD_DELETE_ALL or LEAD_DELETE_OWN permission)"
          },
          "response": []
        },
        {
          "name": "Assign Lead",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"ownerUserId\": \"{{userId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/leads/:id/assign",
              "host": ["{{baseUrl}}"],
              "path": ["leads", ":id", "assign"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{leadId}}"
                }
              ]
            },
            "description": "Assign lead to a user (requires LEAD_ASSIGN permission)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Projects",
      "description": "Project management endpoints",
      "item": [
        {
          "name": "Create Project",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('projectId', response.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Website Redesign\",\n  \"description\": \"Complete website redesign project\",\n  \"clientId\": \"{{leadId}}\",\n  \"status\": \"PLANNING\",\n  \"startDate\": \"2024-01-01\",\n  \"endDate\": \"2024-06-30\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/projects",
              "host": ["{{baseUrl}}"],
              "path": ["projects"]
            },
            "description": "Create a new project (requires PROJECT_CREATE permission)"
          },
          "response": []
        },
        {
          "name": "List Projects",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects?page=1&pageSize=10&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["projects"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                },
                {
                  "key": "status",
                  "value": "ACTIVE",
                  "disabled": true
                },
                {
                  "key": "search",
                  "value": "",
                  "disabled": true
                }
              ]
            },
            "description": "List projects with filtering and pagination (requires PROJECT_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get Project by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/:id",
              "host": ["{{baseUrl}}"],
              "path": ["projects", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{projectId}}"
                }
              ]
            },
            "description": "Get project by ID (requires PROJECT_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Update Project",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"IN_PROGRESS\",\n  \"description\": \"Updated project description\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/projects/:id",
              "host": ["{{baseUrl}}"],
              "path": ["projects", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{projectId}}"
                }
              ]
            },
            "description": "Update project (requires PROJECT_UPDATE permission)"
          },
          "response": []
        },
        {
          "name": "Delete Project",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/:id",
              "host": ["{{baseUrl}}"],
              "path": ["projects", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{projectId}}"
                }
              ]
            },
            "description": "Delete project (soft delete) (requires PROJECT_DELETE permission)"
          },
          "response": []
        },
        {
          "name": "Add Project Member",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"userId\": \"{{userId}}\",\n  \"role\": \"Developer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/projects/:id/members",
              "host": ["{{baseUrl}}"],
              "path": ["projects", ":id", "members"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{projectId}}"
                }
              ]
            },
            "description": "Add member to project (requires PROJECT_UPDATE permission)"
          },
          "response": []
        },
        {
          "name": "Remove Project Member",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/projects/:id/members/:userId",
              "host": ["{{baseUrl}}"],
              "path": ["projects", ":id", "members", ":userId"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{projectId}}"
                },
                {
                  "key": "userId",
                  "value": "{{userId}}"
                }
              ]
            },
            "description": "Remove member from project (requires PROJECT_UPDATE permission)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Tasks",
      "description": "Task management endpoints",
      "item": [
        {
          "name": "Create Task",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.collectionVariables.set('taskId', response.data.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Design Homepage\",\n  \"description\": \"Create mockups for homepage redesign\",\n  \"projectId\": \"{{projectId}}\",\n  \"assignedTo\": \"{{userId}}\",\n  \"priority\": \"HIGH\",\n  \"status\": \"TODO\",\n  \"dueDate\": \"2024-02-01\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"]
            },
            "description": "Create a new task (requires TASK_CREATE permission)"
          },
          "response": []
        },
        {
          "name": "List Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks?page=1&pageSize=10&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["tasks"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                },
                {
                  "key": "status",
                  "value": "TODO",
                  "disabled": true
                },
                {
                  "key": "priority",
                  "value": "HIGH",
                  "disabled": true
                },
                {
                  "key": "projectId",
                  "value": "{{projectId}}",
                  "disabled": true
                }
              ]
            },
            "description": "List tasks with filters (requires TASK_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get My Tasks",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/my",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "my"]
            },
            "description": "Get tasks assigned to current user (requires TASK_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get Tasks by Project",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/project/:projectId",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", "project", ":projectId"],
              "variable": [
                {
                  "key": "projectId",
                  "value": "{{projectId}}"
                }
              ]
            },
            "description": "Get tasks by project (requires TASK_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get Task by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/:id",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{taskId}}"
                }
              ]
            },
            "description": "Get task by ID (requires TASK_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Update Task",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"status\": \"IN_PROGRESS\",\n  \"priority\": \"MEDIUM\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/tasks/:id",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{taskId}}"
                }
              ]
            },
            "description": "Update task (requires TASK_UPDATE permission)"
          },
          "response": []
        },
        {
          "name": "Delete Task",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/tasks/:id",
              "host": ["{{baseUrl}}"],
              "path": ["tasks", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "{{taskId}}"
                }
              ]
            },
            "description": "Delete task (requires TASK_DELETE permission)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Notes",
      "description": "Note management endpoints",
      "item": [
        {
          "name": "Create Note",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Follow up call scheduled for next week\",\n  \"entityType\": \"Lead\",\n  \"entityId\": \"{{leadId}}\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes",
              "host": ["{{baseUrl}}"],
              "path": ["notes"]
            },
            "description": "Create a new note (requires NOTE_CREATE permission)"
          },
          "response": []
        },
        {
          "name": "List All Notes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notes?page=1&pageSize=10",
              "host": ["{{baseUrl}}"],
              "path": ["notes"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                }
              ]
            },
            "description": "List all notes with filters (requires NOTE_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "List Notes by Entity",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notes/:entityType/:entityId",
              "host": ["{{baseUrl}}"],
              "path": ["notes", ":entityType", ":entityId"],
              "variable": [
                {
                  "key": "entityType",
                  "value": "Lead"
                },
                {
                  "key": "entityId",
                  "value": "{{leadId}}"
                }
              ]
            },
            "description": "List notes by entity (requires NOTE_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get Note Count",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notes/:entityType/:entityId/count",
              "host": ["{{baseUrl}}"],
              "path": ["notes", ":entityType", ":entityId", "count"],
              "variable": [
                {
                  "key": "entityType",
                  "value": "Lead"
                },
                {
                  "key": "entityId",
                  "value": "{{leadId}}"
                }
              ]
            },
            "description": "Get note count by entity (requires NOTE_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Update Note",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"content\": \"Updated note content\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/notes/:id",
              "host": ["{{baseUrl}}"],
              "path": ["notes", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "note-id"
                }
              ]
            },
            "description": "Update note (author only) (requires NOTE_UPDATE permission)"
          },
          "response": []
        },
        {
          "name": "Delete Note",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/notes/:id",
              "host": ["{{baseUrl}}"],
              "path": ["notes", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "note-id"
                }
              ]
            },
            "description": "Delete note (author only) (requires NOTE_DELETE permission)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Attachments",
      "description": "File attachment endpoints",
      "item": [
        {
          "name": "Upload Attachment",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "file",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "entityType",
                  "value": "Lead",
                  "type": "text"
                },
                {
                  "key": "entityId",
                  "value": "{{leadId}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/attachments",
              "host": ["{{baseUrl}}"],
              "path": ["attachments"]
            },
            "description": "Upload a single attachment (requires FILE_UPLOAD permission)"
          },
          "response": []
        },
        {
          "name": "Upload Multiple Attachments",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "body": {
              "mode": "formdata",
              "formdata": [
                {
                  "key": "files",
                  "type": "file",
                  "src": []
                },
                {
                  "key": "entityType",
                  "value": "Project",
                  "type": "text"
                },
                {
                  "key": "entityId",
                  "value": "{{projectId}}",
                  "type": "text"
                }
              ]
            },
            "url": {
              "raw": "{{baseUrl}}/attachments/bulk",
              "host": ["{{baseUrl}}"],
              "path": ["attachments", "bulk"]
            },
            "description": "Upload multiple attachments (max 5) (requires FILE_UPLOAD permission)"
          },
          "response": []
        },
        {
          "name": "List Attachments",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/attachments?page=1&pageSize=10&sortBy=createdAt&sortOrder=desc",
              "host": ["{{baseUrl}}"],
              "path": ["attachments"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "createdAt"
                },
                {
                  "key": "sortOrder",
                  "value": "desc"
                },
                {
                  "key": "entityType",
                  "value": "Lead",
                  "disabled": true
                },
                {
                  "key": "entityId",
                  "value": "{{leadId}}",
                  "disabled": true
                }
              ]
            },
            "description": "List attachments with filters (requires FILE_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get Attachment Stats",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/attachments/stats/:entityType/:entityId",
              "host": ["{{baseUrl}}"],
              "path": ["attachments", "stats", ":entityType", ":entityId"],
              "variable": [
                {
                  "key": "entityType",
                  "value": "Lead"
                },
                {
                  "key": "entityId",
                  "value": "{{leadId}}"
                }
              ]
            },
            "description": "Get attachment statistics for an entity (requires FILE_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get Attachment by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/attachments/:id",
              "host": ["{{baseUrl}}"],
              "path": ["attachments", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "attachment-id"
                }
              ]
            },
            "description": "Get attachment details by ID (requires FILE_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Download Attachment",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/attachments/:id/download",
              "host": ["{{baseUrl}}"],
              "path": ["attachments", ":id", "download"],
              "variable": [
                {
                  "key": "id",
                  "value": "attachment-id"
                }
              ]
            },
            "description": "Download attachment file (requires FILE_DOWNLOAD permission)"
          },
          "response": []
        },
        {
          "name": "Delete Attachment",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/attachments/:id",
              "host": ["{{baseUrl}}"],
              "path": ["attachments", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "attachment-id"
                }
              ]
            },
            "description": "Delete attachment (requires FILE_DELETE permission)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Roles",
      "description": "Role management endpoints",
      "item": [
        {
          "name": "Create Role",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Sales Manager\",\n  \"description\": \"Manages sales team and leads\",\n  \"permissions\": [\n    \"lead.create\",\n    \"lead.view.all\",\n    \"lead.edit.all\",\n    \"lead.assign\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/roles",
              "host": ["{{baseUrl}}"],
              "path": ["roles"]
            },
            "description": "Create a new custom role (requires ROLE_MANAGE permission)"
          },
          "response": []
        },
        {
          "name": "List Roles",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/roles?page=1&pageSize=10",
              "host": ["{{baseUrl}}"],
              "path": ["roles"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                },
                {
                  "key": "isCustom",
                  "value": "true",
                  "disabled": true
                }
              ]
            },
            "description": "List all roles with filters and pagination (requires PERMISSION_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get All Permissions",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/roles/permissions",
              "host": ["{{baseUrl}}"],
              "path": ["roles", "permissions"]
            },
            "description": "Get all available permissions (requires PERMISSION_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get Role by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/roles/:id",
              "host": ["{{baseUrl}}"],
              "path": ["roles", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "role-id"
                }
              ]
            },
            "description": "Get role details by ID (requires PERMISSION_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Update Role",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"description\": \"Updated role description\",\n  \"permissions\": [\n    \"lead.create\",\n    \"lead.view.all\",\n    \"lead.edit.all\",\n    \"lead.assign\",\n    \"project.view\"\n  ]\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/roles/:id",
              "host": ["{{baseUrl}}"],
              "path": ["roles", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "role-id"
                }
              ]
            },
            "description": "Update role (requires ROLE_MANAGE permission)"
          },
          "response": []
        },
        {
          "name": "Delete Role",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/roles/:id",
              "host": ["{{baseUrl}}"],
              "path": ["roles", ":id"],
              "variable": [
                {
                  "key": "id",
                  "value": "role-id"
                }
              ]
            },
            "description": "Delete role (requires ROLE_MANAGE permission)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Organization",
      "description": "Organization settings endpoints",
      "item": [
        {
          "name": "Get Organization",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/org",
              "host": ["{{baseUrl}}"],
              "path": ["org"]
            },
            "description": "Get current organization profile with statistics (requires ORG_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Update Organization",
          "request": {
            "method": "PATCH",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              },
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Acme Corporation\",\n  \"settings\": {\n    \"dateFormat\": \"MM/DD/YYYY\",\n    \"timezone\": \"America/New_York\",\n    \"features\": {\n      \"enableEmailNotifications\": true,\n      \"enableTaskReminders\": true,\n      \"enableAuditLog\": true\n    },\n    \"requiredFields\": {\n      \"lead\": {\n        \"company\": true,\n        \"phone\": true,\n        \"source\": true\n      },\n      \"project\": {\n        \"client\": true,\n        \"description\": true\n      }\n    }\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/org",
              "host": ["{{baseUrl}}"],
              "path": ["org"]
            },
            "description": "Update organization settings (requires ORG_MANAGE permission - SuperAdmin only)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Analytics",
      "description": "Analytics and reporting endpoints",
      "item": [
        {
          "name": "Get Overview",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/analytics/overview?startDate=2024-01-01&endDate=2024-12-31",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "overview"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                }
              ]
            },
            "description": "Get overview dashboard statistics (requires ANALYTICS_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get Lead Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/analytics/leads?startDate=2024-01-01&endDate=2024-12-31&groupBy=status",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "leads"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                },
                {
                  "key": "groupBy",
                  "value": "status"
                }
              ]
            },
            "description": "Get lead analytics (requires ANALYTICS_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get Project Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/analytics/projects?startDate=2024-01-01&endDate=2024-12-31&groupBy=status",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "projects"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                },
                {
                  "key": "groupBy",
                  "value": "status"
                }
              ]
            },
            "description": "Get project analytics (requires ANALYTICS_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get Task Analytics",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/analytics/tasks?startDate=2024-01-01&endDate=2024-12-31&groupBy=status",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "tasks"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                },
                {
                  "key": "groupBy",
                  "value": "status"
                }
              ]
            },
            "description": "Get task analytics (requires ANALYTICS_VIEW permission)"
          },
          "response": []
        },
        {
          "name": "Get User Activity",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{accessToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/analytics/activity?startDate=2024-01-01&endDate=2024-12-31&userId={{userId}}",
              "host": ["{{baseUrl}}"],
              "path": ["analytics", "activity"],
              "query": [
                {
                  "key": "startDate",
                  "value": "2024-01-01"
                },
                {
                  "key": "endDate",
                  "value": "2024-12-31"
                },
                {
                  "key": "userId",
                  "value": "{{userId}}"
                }
              ]
            },
            "description": "Get user activity analytics (requires ANALYTICS_VIEW permission)"
          },
          "response": []
        }
      ]
    },
    {
      "name": "Health Check",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "http://localhost:5000/health",
          "protocol": "http",
          "host": ["localhost"],
          "port": "5000",
          "path": ["health"]
        },
        "description": "Check API health status"
      },
      "response": []
    }
  ]
}